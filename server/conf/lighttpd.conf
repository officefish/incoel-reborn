### Documentation
# https://wiki.lighttpd.net/
#
### Configuration Syntax
# https://wiki.lighttpd.net/Docs_Configuration
#
### Configuration Options
# https://wiki.lighttpd.net/Docs_ConfigurationOptions
#

### Debian lighttpd base configuration

server.modules = (
	"mod_indexfile",
	"mod_access",
	"mod_alias",
	"mod_openssl",
 	"mod_redirect",
	"mod_auth",
	"mod_authn_file",
	"mod_cgi",
#	"mod_accesslog",
	"mod_deflate",
    "mod_setenv"
)

server.document-root        = "/www/pages/"
server.upload-dirs          = ( "/tmp/" )
server.errorlog             = "/tmp/lighttpd.error.log"
server.pid-file             = "/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.port                 = 80

server.stream-response-body = 0

#auth.debug		   = 2
auth.backend                   = "htdigest"
auth.backend.htdigest.userfile = "/config/lighttpd-htdigest.user"
auth.require               = ( "/" =>
                               (
                                 "method"  => "digest",
                                 "realm"   => "antMiner Configuration",
                                 "require" => "valid-user"
                               )
                             )

accesslog.filename = "/tmp/lighttpd.access.log"

server.breakagelog = "/tmp/lighttpd.errCGI.log"
cgi.assign                 = ( ".cgi"  => "/bin/sh" )
cgi.upgrade = "enable"  # default "disable" 

# No www
$HTTP["host"] =~ "^www\.(.*)" {
  url.redirect = ( "^/(.*)" => "http://%1/$1" )
}

$SERVER["socket"] == ":443" {
    ssl.engine = "enable"
    ssl.pemfile = "/etc/lighttpd/ssl/cert.pem"
    ssl.privkey = "/etc/lighttpd/ssl/key.pem"
}
# No https
#$SERVER["socket"] == ":443" {
#    $HTTP["scheme"] == "https" {
#        url.redirect = (".*" => "http://%{host}%{url}")
#    }
#}

$HTTP["url"] =~ ".*" {
    setenv.add-response-header = (
        "Access-Control-Allow-Origin" => "http://localhost:5173",
        "Access-Control-Allow-Methods" => "GET, POST, OPTIONS",
        "Access-Control-Allow-Headers" => "Content-Type, Authorization, Content-Length, Date, Server, Www-Authenticate"
    )
}

$HTTP["url"] =~ "^/cgi-bin/hello_world.cgi" {
    auth.require = ( )
}

$HTTP["url"] =~ "^/cgi-bin/get_blink_status.cgi" {
    auth.require = ( )
}

$HTTP["url"] =~ "^/cgi-bin_n/tools/autoupgrade_config_get.cgi" {
    auth.require = ( )
}

$HTTP["url"] =~ "^/cgi-bin_n/settings.cgi" {
    auth.require = ( )
}

$HTTP["url"] =~ "^/cgi-bin/stats.cgi" {
    auth.require = ( )
}

$HTTP["url"] =~ "^/cgi-bin/random_elapsed.cgi" {
    auth.require = ( )

    setenv.add-response-header = (
        "Access-Control-Allow-Origin" => "http://localhost:5173",
        "Access-Control-Allow-Methods" => "GET, POST, OPTIONS",
        "Access-Control-Allow-Headers" => "Content-Type, Authorization, Content-Length, Date, Server, Www-Authenticate",
        
        "Content-Type" => "application/json",
        "Cache-Control" => "no-cache",
        "Connection" => "keep-alive"
    )
}

$HTTP["url"] =~ "^/cgi-bin/long_pooling.cgi" {
    auth.require = ( )

    setenv.add-response-header = (
        "Access-Control-Allow-Origin" => "http://localhost:5173",
        "Access-Control-Allow-Methods" => "GET, POST, OPTIONS",
        "Access-Control-Allow-Headers" => "Content-Type, Authorization, Content-Length, Date, Server, Www-Authenticate",

        "Content-Type" => "application/json",
        "Cache-Control" => "no-cache",
        "Connection" => "keep-alive"
    )
}

$HTTP["url"] =~ "^/cgi-bin/sse.cgi" {
    auth.require = ( )

    setenv.add-response-header = (
        "Access-Control-Allow-Origin" => "http://localhost:5173",
        "Access-Control-Allow-Methods" => "GET, POST, OPTIONS",
        "Access-Control-Allow-Headers" => "Content-Type, Authorization, Content-Length, Date, Server, Www-Authenticate",

        "Content-Type" => "text/event-stream",
        "Cache-Control" => "no-cache",
        "Connection" => "keep-alive"
    )
}

#$HTTP["scheme"] == "https" {
#    # Код 301 означает "Moved Permanently", что будет указывать браузеру на постоянный редирект
#    $HTTP["host"] =~ ".*" {
#        url.redirect = (".*" => "http://%0$0")
#		url.redirect-code = 308
#    }
#}

#deflate.cache-dir = "/tmp/compress-cache" 
#deflate.mimetypes = ( "application/javascript", "text/css", "text/html", "text/plain" )

# strict parsing and normalization of URL for consistency and security
# https://wiki.lighttpd.net/Server_http-parseoptsDetails
# (might need to explicitly set "url-path-2f-decode" = "disable"
#  if a specific application is encoding URLs inside url-path)
server.http-parseopts = (
  "header-strict"           => "enable",# default
  "host-strict"             => "enable",# default
  "host-normalize"          => "enable",# default
  "url-normalize-unreserved"=> "enable",# recommended highly
  "url-normalize-required"  => "enable",# recommended
  "url-ctrls-reject"        => "enable",# recommended
  "url-path-2f-decode"      => "enable",# recommended highly (unless breaks app)
 #"url-path-2f-reject"      => "enable",
  "url-path-dotseg-remove"  => "enable",# recommended highly (unless breaks app)
 #"url-path-dotseg-reject"  => "enable",
 #"url-query-20-plus"       => "enable",# consistency in query string
  "url-invalid-utf8-reject" => "enable",# recommended highly (unless breaks app)
)

index-file.names            = ( "index.php", "index.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

#include_shell "/usr/share/lighttpd/create-mime.conf.pl"
include "/etc/lighttpd/conf-enabled/*.conf"

# default listening port for IPv6 is same as default IPv4 port
#include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port

### Customizations
# customizations should generally be placed in separate files such as
#   /etc/lighttpd/conf-available/00_vars.conf    # override variables for *.conf
#   /etc/lighttpd/conf-available/99_custom.conf  # override *.conf settings
# and then enabled using lighty-enable-mod (1)
